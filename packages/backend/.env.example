# ANUBIS Chat Backend Environment Variables (Convex)
# ============================================================================
# Copy this file to .env and fill in your actual values
# ============================================================================

# ============================================================================
# Application Configuration
# ============================================================================
NODE_ENV=development
# For local development
CONVEX_CLOUD_URL=https://your-deployment.convex.cloud
CONVEX_DEPLOYMENT=your-deployment-name

# ============================================================================
# Convex Auth Configuration
# ============================================================================
# Core auth settings (automatically generated by Convex Auth)
# Run: npx @convex-dev/auth to initialize these values
JWT_PRIVATE_KEY=your-generated-jwt-private-key
JWKS=your-generated-jwks-configuration

# Site URL for OAuth redirects and magic links
SITE_URL=http://localhost:3001

# Debug logging for auth (set to DEBUG for detailed logs, remove in production)
AUTH_LOG_LEVEL=

# ============================================================================
# OAuth Provider Configuration (Configure as needed)
# ============================================================================
# GitHub OAuth (optional)
# AUTH_GITHUB_ID=your-github-client-id
# AUTH_GITHUB_SECRET=your-github-client-secret

# Google OAuth (optional)
# AUTH_GOOGLE_ID=your-google-client-id
# AUTH_GOOGLE_SECRET=your-google-client-secret

# Apple OAuth (optional)
# AUTH_APPLE_ID=your-apple-service-identifier
# AUTH_APPLE_SECRET=your-apple-generated-jwt-secret

# ============================================================================
# Email Provider Configuration (Optional)
# ============================================================================
# Resend for magic links and OTP (optional)
AUTH_RESEND_KEY=your-resend-api-key

# ============================================================================
# AI Model API Configuration
# ============================================================================
# OpenAI API key for GPT models
OPENAI_API_KEY=sk-your-openai-api-key-here
# Optional: Organization ID for OpenAI
OPENAI_ORG_ID=org-your-organization-id

# OpenRouter API (for additional models)
OPENROUTER_API_KEY=your-openrouter-api-key-here

# Anthropic Claude API
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Google Gemini API
GOOGLE_GENERATIVE_AI_API_KEY=your-google-generative-ai-api-key-here

# ============================================================================
# Search API Configuration
# ============================================================================
# SearchAPI.io - More cost-effective than SerpAPI ($40/month vs $50/month)
# Get your API key from https://www.searchapi.io/
# 100 free requests available for testing
SEARCHAPI_API_KEY=your_searchapi_api_key_here

# ============================================================================
# Solana Blockchain Configuration
# ============================================================================
# Network: mainnet-beta, testnet, devnet, localhost
SOLANA_NETWORK=devnet
# RPC endpoint for blockchain interactions
SOLANA_RPC_URL=https://api.devnet.solana.com
# Wallet address for receiving subscription payments
SOLANA_PAYMENT_ADDRESS=YOUR_SOLANA_WALLET_ADDRESS_HERE

# ============================================================================
# SPL Token Configuration
# ============================================================================
# Enable SPL token payments (true/false)
# When true, users can pay for subscriptions and credits with SPL tokens
ENABLE_SPL_TOKENS=true

# SPL Token configuration in JSON format
# This configures which SPL tokens are accepted for payments
# Each token needs: symbol, name, mint address, decimals, and enabled status
# 
# Format: [{"symbol": "SYMBOL", "name": "Token Name", "address": "mint_address", "decimals": 6, "enabled": true}, ...]
# 
# Example with $SYMX and $PUMP tokens:
SPL_TOKEN_CONFIG=[{"symbol":"SYMX","name":"SYMBaiEX Token","address":"Fu4jQQpUnECSVQrVfeeVPpQpXQffM75LL328EJPtpump","decimals":6,"enabled":true},{"symbol":"PUMP","name":"Pump Token","address":"pumpCmXqMfrsAkQ5r49WcJnRayYRqmXz6ae8H7H9Dfn","decimals":6,"enabled":true}]
#
# To add more tokens, extend the JSON array:
# [{"symbol":"SYMX","address":"..."},{"symbol":"PUMP","address":"..."},{"symbol":"NEW","name":"New Token","address":"mint_address_here","decimals":9,"enabled":true}]

# Price feed API for token price fetching
# Options: jupiter (recommended), birdeye, coingecko
# Jupiter API is free and doesn't require an API key
PRICE_FEED_API=jupiter

# Optional API key for price feed service
# Required for some services like Birdeye or CoinGecko Pro
# Leave empty for Jupiter (free)
PRICE_FEED_API_KEY=

# Price cache TTL in seconds (default: 60)
# How long to cache token prices before fetching fresh data
# Lower values = more accurate prices but more API calls
PRICE_CACHE_TTL_SECONDS=60

# ============================================================================
# Subscription Configuration
# ============================================================================
# Pricing in SOL
SUBSCRIPTION_PRO_PRICE_SOL=0.05
SUBSCRIPTION_PRO_PLUS_PRICE_SOL=0.1
# USD approximations for logging/analytics
SUBSCRIPTION_PRO_PRICE_USD=12
SUBSCRIPTION_PRO_PLUS_PRICE_USD=25

# Message limits per tier
SUBSCRIPTION_FREE_MESSAGE_LIMIT=50
SUBSCRIPTION_PRO_MESSAGE_LIMIT=500
SUBSCRIPTION_PRO_PLUS_MESSAGE_LIMIT=1000

# Premium message limits
SUBSCRIPTION_PRO_PREMIUM_LIMIT=100
SUBSCRIPTION_PRO_PLUS_PREMIUM_LIMIT=300

# ============================================================================
# Payment Processing Configuration
# ============================================================================
# Webhook secret for payment verification
PAYMENT_WEBHOOK_SECRET=your-webhook-secret-256-bit
# Payment confirmation timeout (milliseconds)
PAYMENT_CONFIRMATION_TIMEOUT_MS=300000
# Solana commitment level for transaction confirmation
SOLANA_COMMITMENT_LEVEL=confirmed

# ============================================================================
# Database Configuration
# ============================================================================
# Storage type (convex is the default)
STORAGE_TYPE=convex

# ============================================================================
# External Services Configuration (Optional)
# ============================================================================
# Qdrant Vector Database (for RAG functionality)
QDRANT_URL=http://localhost:6333
QDRANT_API_KEY=your-qdrant-api-key

# Supabase (alternative storage)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key

# ============================================================================
# Security Configuration
# ============================================================================
# JWT secret for authentication (server-side only)
JWT_SECRET=your-super-secret-jwt-key-256-bit-minimum
JWT_EXPIRES_IN=24h

# Rate limiting configuration
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_WINDOW_MS=900000

# CORS configuration
ALLOWED_ORIGINS=http://localhost:3001,https://abubis.chat
CORS_CREDENTIALS=true

# ============================================================================
# Development and Debugging
# ============================================================================
# Debug namespace
DEBUG=anubis-chat:*
# Log level: error, warn, info, debug
LOG_LEVEL=info